name: CI

on:
  push:
    branches:
      - gh-*
  release:
    types:
      - created

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dev.requirements.txt
      - name: Test with pytest
        run: |
          py.test --cov-report xml --cov-report term --cov=ci_benchmark ./tests
      - name: Codecov
        if: matrix.python-version == '3.8'
        run: |
          codecov -t ${{ secrets.CODECOV_TOKEN }}
      - name: Coveralls
        if: matrix.python-version == '3.8'
        run: |
          coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      - name: DeepSource
        if: matrix.python-version == '3.8'
        run: |
          curl https://deepsource.io/cli | sh
          ./bin/deepsource report --analyzer test-coverage --key python --value-file ./coverage.xml
        env:
          DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dev.requirements.txt
      - name: Lint with pylint
        run: |
          pylint --load-plugins pylint_quotes ci_benchmark tests

  deploy:
    needs: [test, lint]
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'release' }}

    steps:
      - name: test patter
        run: echo ${GITHUB_REF##*/%%\.gh}
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Build and publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
          TWINE_REPOSITORY: testpypi
        run: |
          sed -i "s#version=\"DEV\",#version=\"${GITHUB_REF##*/%%\.gh}\",#g" setup.py
          python setup.py sdist bdist_wheel
          twine upload dist/*
